{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Search.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      hasDiseble: true,\n      hasLoading: false,\n      habilitInput: false,\n      name: '',\n      albumArtist: []\n    };\n    this.handleChageInput = this.handleChageInput.bind(this);\n    this.onCountClick = this.onCountClick.bind(this);\n    this.onClickButton = this.onClickButton.bind(this);\n  }\n\n  handleChageInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const name = target.value;\n    this.setState({\n      artist: name\n    }, () => this.onCountClick());\n  }\n\n  onCountClick() {\n    const {\n      artist\n    } = this.state;\n\n    if (artist.length < 2) {\n      this.setState({\n        hasDiseble: true\n      });\n    } else {\n      this.setState({\n        hasDiseble: false\n      });\n    }\n  }\n\n  async onClickButton() {\n    const {\n      artist\n    } = this.state;\n    const name = artist;\n    this.setState({\n      artist: '',\n      name,\n      hasLoading: true\n    });\n    const albumList = await searchAlbumsAPI(artist);\n    this.setState({\n      hasLoading: false,\n      albumArtist: albumList\n    });\n    console.log(albumList);\n  }\n\n  render() {\n    const {\n      hasDiseble,\n      nameArtist,\n      hasLoading,\n      habilitInput,\n      name,\n      albumArtist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), hasLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artistInput\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"search-artist-input\",\n            type: \"text\",\n            name: \"artistInput\",\n            value: nameArtist,\n            disabled: habilitInput,\n            onChange: this.handleChageInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"search-artist-button\",\n          type: \"button\",\n          disabled: hasDiseble,\n          onClick: this.onClickButton,\n          children: \"Pesquisa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Resultado de \\xE1lbuns de:\", ' ', name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: albumArtist.map(artist => {\n            /*#__PURE__*/\n            _jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"artist.artistName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: artist.artworkUrl100,\n                  alt: artist.artistName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Search.js"],"names":["React","Header","searchAlbumsAPI","Loading","Search","Component","constructor","state","artist","hasDiseble","hasLoading","habilitInput","name","albumArtist","handleChageInput","bind","onCountClick","onClickButton","target","value","setState","length","albumList","console","log","render","nameArtist","map","artworkUrl100","artistName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      hasDiseble: true,\n      hasLoading: false,\n      habilitInput: false,\n      name: '',\n      albumArtist: [],\n    };\n    this.handleChageInput = this.handleChageInput.bind(this);\n    this.onCountClick = this.onCountClick.bind(this);\n    this.onClickButton = this.onClickButton.bind(this);\n  }\n\n  handleChageInput({ target }) {\n    const name = target.value;\n\n    this.setState({\n      artist: name,\n    }, () => this.onCountClick());\n  }\n\n  onCountClick() {\n    const { artist } = this.state;\n    if (artist.length < 2) {\n      this.setState({ hasDiseble: true });\n    } else {\n      this.setState({ hasDiseble: false });\n    }\n  }\n\n  async onClickButton() {\n    const { artist } = this.state;\n    const name = artist;\n    this.setState({ artist: '', name, hasLoading: true });\n    const albumList = await searchAlbumsAPI(artist);\n\n    this.setState({ hasLoading: false, albumArtist: albumList });\n    console.log(albumList);\n  }\n\n  render() {\n    const { hasDiseble,\n      nameArtist, hasLoading, habilitInput,\n      name, albumArtist } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n\n        <Header />\n\n        <h1>search</h1>\n        {hasLoading ? <Loading />\n          : (<>\n            <label htmlFor=\"artistInput\">\n              <input\n                data-testid=\"search-artist-input\"\n                type=\"text\"\n                name=\"artistInput\"\n                value={ nameArtist }\n                disabled={ habilitInput }\n                onChange={ this.handleChageInput }\n              />\n            </label>\n            <button\n              data-testid=\"search-artist-button\"\n              type=\"button\"\n              disabled={ hasDiseble }\n              onClick={ this.onClickButton }\n            >\n              Pesquisa\n            </button>\n            <h1>\n              Resultado de álbuns de:\n              {' '}\n              {name}\n            </h1>\n            <div>\n\n              {albumArtist.map((artist) => {\n                <ul>\n                  <li>artist.artistName</li>\n                  <li><img src={ artist.artworkUrl100 } alt={ artist.artistName } /></li>\n                </ul>;\n              })}\n\n            </div>\n          </>)}\n      </div>);\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}