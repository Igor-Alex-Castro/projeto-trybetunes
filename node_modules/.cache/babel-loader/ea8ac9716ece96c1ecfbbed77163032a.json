{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      isLoading: true,\n      listCantor: [],\n      listMusic: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    this.setState({\n      isLoading: true\n    });\n    const music = await getMusics(id);\n    const musicList = music.filter(_ref => {\n      let {\n        kind\n      } = _ref;\n      return kind === 'song';\n    });\n    const musicFav = await getFavoriteSongs(id);\n    console.log(musicFav);\n    this.setState({\n      id,\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      listCantor,\n      listMusic,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"artist-name\",\n        children: listCantor.artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"album-name\",\n        children: listCantor.collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this) : listMusic.map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n        trackName: music.trackName,\n        previewUrl: music.previewUrl,\n        trackId: music.trackId,\n        id: music\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","MusicCard","getMusics","Loading","getFavoriteSongs","Album","Component","constructor","state","id","isLoading","listCantor","listMusic","componentDidMount","match","props","params","setState","music","musicList","filter","kind","musicFav","console","log","render","artistName","collectionName","map","index","trackName","previewUrl","trackId","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAASO,MAAf;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMQ,KAAK,GAAG,MAAMhB,SAAS,CAACO,EAAD,CAA7B;AACA,UAAMU,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAcA,IAAI,KAAK,MAAvB;AAAA,KAAb,CAAlB;AACA,UAAMC,QAAQ,GAAG,MAAMlB,gBAAgB,CAACK,EAAD,CAAvC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKL,QAAL,CAAc;AACZR,MAAAA,EADY;AAEZC,MAAAA,SAAS,EAAE,KAFC;AAGZC,MAAAA,UAAU,EAAEO,KAAK,CAAC,CAAD,CAHL;AAIZN,MAAAA,SAAS,EAAEO;AAJC,KAAd;AAKD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA,SAAzB;AAAoCH,MAAAA;AAApC,QAA2C,KAAKD,KAAtD;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,uBAAY,aAAhB;AAAA,kBAA+BG,UAAU,CAACe;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,uBAAY,YAAhB;AAAA,kBAA8Bf,UAAU,CAACgB;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF,EAIIjB,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GACNE,SAAS,CAACgB,GAAV,CAAc,CAACV,KAAD,EAAQW,KAAR,kBACf,QAAC,SAAD;AACE,QAAA,SAAS,EAAGX,KAAK,CAACY,SADpB;AAGE,QAAA,UAAU,EAAGZ,KAAK,CAACa,UAHrB;AAIE,QAAA,OAAO,EAAGb,KAAK,CAACc,OAJlB;AAKE,QAAA,EAAE,EAAGd;AALP,SAEQW,KAFR;AAAA;AAAA;AAAA;AAAA,cADC,CALP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA7CiC;;AA+CpCxB,KAAK,CAAC4B,SAAN,GAAkB;AAChBnB,EAAAA,KAAK,EAAEf,SAAS,CAACmC,KAAV,CAAgB;AACrBlB,IAAAA,MAAM,EAAEjB,SAAS,CAACmC,KAAV,CAAgB;AACtBzB,MAAAA,EAAE,EAAEV,SAAS,CAACoC,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALa,CAAlB;AAOA,eAAe/B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      isLoading: true,\n      listCantor: [],\n      listMusic: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    this.setState({ isLoading: true });\n    const music = await getMusics(id);\n    const musicList = music.filter(({ kind }) => kind === 'song');\n    const musicFav = await getFavoriteSongs(id);\n    console.log(musicFav);\n    this.setState({\n      id,\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList });\n  }\n\n  render() {\n    const { isLoading, listCantor, listMusic, id } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <h2 data-testid=\"artist-name\">{listCantor.artistName}</h2>\n        <h3 data-testid=\"album-name\">{listCantor.collectionName}</h3>\n        { isLoading ? <Loading />\n          : (listMusic.map((music, index) => (\n            <MusicCard\n              trackName={ music.trackName }\n              key={ index }\n              previewUrl={ music.previewUrl }\n              trackId={ music.trackId }\n              id={ music }\n            />\n          )))}\n      </div>);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}