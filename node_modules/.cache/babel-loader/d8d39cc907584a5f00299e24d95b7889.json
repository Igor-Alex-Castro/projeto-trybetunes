{"ast":null,"code":"import _regeneratorRuntime from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/igor/Documentos/ProjetosPessoais/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Header from'../../components/Header/Header';import MusicCard from'../../components/MusicCard';import getMusics from'../../services/musicsAPI';import Loading from'../loading/Loading';import{getFavoriteSongs}from'../../services/favoriteSongsAPI';import'./album.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Album=/*#__PURE__*/function(_React$Component){_inherits(Album,_React$Component);var _super=_createSuper(Album);function Album(){var _this;_classCallCheck(this,Album);_this=_super.call(this);_this.state={isLoading:true,listCantor:[],listMusic:[],musicaFav:[]};return _this;}_createClass(Album,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var match,params,id,music,musicList,musicFav;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:match=this.props.match;params=match.params;id=params.id;this.setState({isLoading:true});_context.next=6;return getMusics(id);case 6:music=_context.sent;musicList=music.filter(function(_ref){var kind=_ref.kind;return kind==='song';});_context.next=10;return getFavoriteSongs();case 10:musicFav=_context.sent;if(musicFav.length<=0){musicFav=[];}console.log(musicFav);this.setState({isLoading:false,listCantor:music[0],listMusic:musicList,musicaFav:musicFav});case 14:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,listCantor=_this$state.listCantor,listMusic=_this$state.listMusic,musicaFav=_this$state.musicaFav;return/*#__PURE__*/_jsxs(\"div\",{\"data-testid\":\"page-album\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"h2\",{\"data-testid\":\"artist-name\",className:\"artist-name\",children:listCantor.artistName}),/*#__PURE__*/_jsx(\"h3\",{\"data-testid\":\"album-name\",className:\"album-name\",children:listCantor.collectionName}),/*#__PURE__*/_jsx(\"div\",{className:\"album-cards\",children:isLoading?/*#__PURE__*/_jsx(Loading,{}):listMusic.map(function(music,index){return/*#__PURE__*/_jsx(MusicCard,{trackName:music.trackName,previewUrl:music.previewUrl,trackId:music.trackId,id:music,favorito:musicaFav.some(function(musica){return musica.trackId===music.trackId;}),isAlbum:true,atualizaSong:undefined},index);})})]});}}]);return Album;}(React.Component);export default Album;","map":{"version":3,"sources":["/home/igor/Documentos/ProjetosPessoais/TrybeTunes/src/pages/album/Album.js"],"names":["React","Header","MusicCard","getMusics","Loading","getFavoriteSongs","Album","state","isLoading","listCantor","listMusic","musicaFav","match","props","params","id","setState","music","musicList","filter","kind","musicFav","length","console","log","artistName","collectionName","map","index","trackName","previewUrl","trackId","some","musica","undefined","Component"],"mappings":"69BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAASC,gBAAT,KAAiC,iCAAjC,CACA,MAAO,aAAP,C,2FAEMC,CAAAA,K,0GACJ,gBAAc,uCACZ,wBACA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAE,IADA,CAEXC,UAAU,CAAE,EAFD,CAGXC,SAAS,CAAE,EAHA,CAIXC,SAAS,CAAE,EAJA,CAAb,CAFY,aAQb,C,6IAED,gLACUC,KADV,CACoB,KAAKC,KADzB,CACUD,KADV,CAEUE,MAFV,CAEqBF,KAFrB,CAEUE,MAFV,CAGUC,EAHV,CAGiBD,MAHjB,CAGUC,EAHV,CAKE,KAAKC,QAAL,CAAc,CAAER,SAAS,CAAE,IAAb,CAAd,EALF,sBAMsBL,CAAAA,SAAS,CAACY,EAAD,CAN/B,QAMQE,KANR,eAOQC,SAPR,CAOoBD,KAAK,CAACE,MAAN,CAAa,kBAAGC,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAI,GAAK,MAAvB,EAAb,CAPpB,wBAQuBf,CAAAA,gBAAgB,EARvC,SAQMgB,QARN,eASE,GAAIA,QAAQ,CAACC,MAAT,EAAmB,CAAvB,CAA0B,CACxBD,QAAQ,CAAG,EAAX,CACD,CACDE,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACA,KAAKL,QAAL,CAAc,CACZR,SAAS,CAAE,KADC,CAEZC,UAAU,CAAEQ,KAAK,CAAC,CAAD,CAFL,CAGZP,SAAS,CAAEQ,SAHC,CAIZP,SAAS,CAAEU,QAJC,CAAd,EAbF,4D,mIAoBA,iBAAS,CACP,gBAAwD,KAAKd,KAA7D,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,UAAnB,aAAmBA,UAAnB,CAA+BC,SAA/B,aAA+BA,SAA/B,CAA0CC,SAA1C,aAA0CA,SAA1C,CACA,mBACE,aAAK,cAAY,YAAjB,wBACE,KAAC,MAAD,IADF,cAEE,WAAI,cAAY,aAAhB,CAA8B,SAAS,CAAC,aAAxC,UAAuDF,UAAU,CAACgB,UAAlE,EAFF,cAGE,WACE,cAAY,YADd,CAEE,SAAS,CAAC,YAFZ,UAIGhB,UAAU,CAACiB,cAJd,EAHF,cAUE,YAAK,SAAS,CAAC,aAAf,UACIlB,SAAS,cAAG,KAAC,OAAD,IAAH,CACNE,SAAS,CAACiB,GAAV,CAAc,SAACV,KAAD,CAAQW,KAAR,qBACf,KAAC,SAAD,EACE,SAAS,CAAGX,KAAK,CAACY,SADpB,CAGE,UAAU,CAAGZ,KAAK,CAACa,UAHrB,CAIE,OAAO,CAAGb,KAAK,CAACc,OAJlB,CAKE,EAAE,CAAGd,KALP,CAME,QAAQ,CAAGN,SAAS,CAACqB,IAAV,CAAe,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACF,OAAP,GAAmBd,KAAK,CAACc,OAArC,EAAf,CANb,CAOE,OAAO,KAPT,CAQE,YAAY,CAAGG,SARjB,EAEQN,KAFR,CADe,EAAd,CAFP,EAVF,GADF,CA2BD,C,mBA5DiB5B,KAAK,CAACmC,S,EAqE1B,cAAe7B,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../../components/Header/Header';\nimport MusicCard from '../../components/MusicCard';\nimport getMusics from '../../services/musicsAPI';\nimport Loading from '../loading/Loading';\nimport { getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport './album.css';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      listCantor: [],\n      listMusic: [],\n      musicaFav: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n\n    this.setState({ isLoading: true });\n    const music = await getMusics(id);\n    const musicList = music.filter(({ kind }) => kind === 'song');\n    let musicFav = await getFavoriteSongs();\n    if (musicFav.length <= 0) {\n      musicFav = [];\n    }\n    console.log(musicFav);\n    this.setState({\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList,\n      musicaFav: musicFav });\n  }\n\n  render() {\n    const { isLoading, listCantor, listMusic, musicaFav } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <h2 data-testid=\"artist-name\" className=\"artist-name\">{listCantor.artistName}</h2>\n        <h3\n          data-testid=\"album-name\"\n          className=\"album-name\"\n        >\n          {listCantor.collectionName}\n\n        </h3>\n        <div className=\"album-cards\">\n          { isLoading ? <Loading />\n            : (listMusic.map((music, index) => (\n              <MusicCard\n                trackName={ music.trackName }\n                key={ index }\n                previewUrl={ music.previewUrl }\n                trackId={ music.trackId }\n                id={ music }\n                favorito={ musicaFav.some((musica) => musica.trackId === music.trackId) }\n                isAlbum\n                atualizaSong={ undefined }\n              />\n            )))}\n        </div>\n      </div>);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}