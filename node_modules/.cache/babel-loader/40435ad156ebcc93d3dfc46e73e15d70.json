{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isFaforite: false,\n      isLoading: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  onChangeInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      checked\n    } = target;\n    this.setState({\n      isFaforite: checked\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const {\n      isFaforite\n    } = this.state;\n    const {\n      id\n    } = this.props;\n\n    if (isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await addSong({\n        id\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      previewUrl,\n      trackName,\n      trackId\n    } = this.props;\n    const {\n      isFaforite,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkMusic\",\n        children: [\"Favorita:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"checkMusic\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          checked: isFaforite,\n          onChange: this.onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","Loading","MusicCard","Component","constructor","state","isFaforite","isLoading","onChangeInput","bind","addFavoritos","target","checked","setState","id","props","render","previewUrl","trackName","trackId","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,aAAa,OAAa;AAAA,QAAZ;AAAEG,MAAAA;AAAF,KAAY;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAcD,MAApB;AACA,SAAKE,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAEM;AADA,KAAd,EAEG,MAAM,KAAKF,YAAL,EAFT;AAGD;;AAEiB,QAAZA,YAAY,GAAG;AACnB,UAAM;AAAEJ,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAM;AAAES,MAAAA;AAAF,QAAS,KAAKC,KAApB;;AACA,QAAIT,UAAJ,EAAgB;AACd,WAAKO,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMP,OAAO,CAAC;AAAEc,QAAAA;AAAF,OAAD,CAAb;AACA,WAAKD,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,QAAqC,KAAKJ,KAAhD;AACA,UAAM;AAAET,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA4B,KAAKF,KAAvC;AACA,wBACE;AAAA,8BAEE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGY,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,4DAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,YAFP;AAGE,yBAAe,kBAAiBC,OAAQ,EAH1C;AAIE,UAAA,OAAO,EAAGb,UAJZ;AAKE,UAAA,QAAQ,EAAG,KAAKE;AALlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AArDqC;;AAuDxCN,SAAS,CAACkB,SAAV,GAAsB;AACpBH,EAAAA,UAAU,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UADT;AAEpBJ,EAAAA,SAAS,EAAEnB,SAAS,CAACsB,MAAV,CAAiBC,UAFR;AAGpBH,EAAAA,OAAO,EAAEpB,SAAS,CAACwB,MAAV,CAAiBD,UAHN;AAIpBR,EAAAA,EAAE,EAAEf,SAAS,CAACsB,MAAV,CAAiBC;AAJD,CAAtB;AAMA,eAAepB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isFaforite: false,\n      isLoading: false,\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  onChangeInput({ target }) {\n    const { checked } = target;\n    this.setState({\n      isFaforite: checked,\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const { isFaforite } = this.state;\n    const { id } = this.props;\n    if (isFaforite) {\n      this.setState({ isLoading: true });\n      await addSong({ id });\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { previewUrl, trackName, trackId } = this.props;\n    const { isFaforite, isLoading } = this.state;\n    return (\n      <div>\n\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <p>{trackName}</p>\n          <track kind=\"captions\" />\n          O seu navegador n√£o suporta o elemento\n          <code>audio</code>\n        </audio>\n        <label htmlFor=\"checkMusic\">\n          Favorita:\n          <input\n            type=\"checkbox\"\n            name=\"checkMusic\"\n            data-testid={ `checkbox-music-${trackId}` }\n            checked={ isFaforite }\n            onChange={ this.onChangeInput }\n          />\n        </label>\n\n      </div>\n    );\n  }\n}\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}