{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Search.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nameArtist: '',\n      hasDiseble: true,\n      listAlbum: [],\n      hasLoading: false\n    };\n    this.handleChageInput = this.handleChageInput.bind(this);\n    this.onCountClick = this.onCountClick.bind(this);\n    this.onClickButton = this.onClickButton.bind(this);\n  }\n\n  handleChageInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const name = target.value;\n    this.setState({\n      nameArtist: name\n    }, () => this.onCountClick());\n  }\n\n  onCountClick() {\n    const {\n      nameArtist\n    } = this.state;\n\n    if (nameArtist.length < 2) {\n      this.setState(prevStation => ({ ...prevStation,\n        hasDiseble: true\n      }));\n    } else {\n      this.setState(prevState => ({ ...prevState,\n        hasDiseble: false\n      }));\n    }\n  }\n\n  async onClickButton() {\n    const {\n      nameArtist\n    } = this.state;\n    this.setState(prevState => ({ ...prevState,\n      nameArtist: '',\n      hasLoading: false\n    }));\n    const album = await searchAlbumsAPI(nameArtist);\n    this.setState(prevState => ({ ...prevState,\n      hasLoading: true\n    }));\n    console.log(album);\n  }\n\n  render() {\n    const {\n      hasDiseble,\n      nameArtist,\n      hasLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), hasLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artistInput\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"search-artist-input\",\n            type: \"text\",\n            name: \"artistInput\",\n            value: nameArtist,\n            onChange: this.handleChageInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"search-artist-button\",\n          type: \"button\",\n          disabled: hasDiseble,\n          onClick: this.onClickButton,\n          children: \"Pesquisar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Search.js"],"names":["React","Header","searchAlbumsAPI","Loading","Search","Component","constructor","state","nameArtist","hasDiseble","listAlbum","hasLoading","handleChageInput","bind","onCountClick","onClickButton","target","name","value","setState","length","prevStation","prevState","album","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nameArtist: '',\n      hasDiseble: true,\n      listAlbum: [],\n      hasLoading: false,\n    };\n    this.handleChageInput = this.handleChageInput.bind(this);\n    this.onCountClick = this.onCountClick.bind(this);\n    this.onClickButton = this.onClickButton.bind(this);\n  }\n\n  handleChageInput({ target }) {\n    const name = target.value;\n    this.setState({\n      nameArtist: name,\n    }, () => this.onCountClick());\n  }\n\n  onCountClick() {\n    const { nameArtist } = this.state;\n    if (nameArtist.length < 2) {\n      this.setState((prevStation) => ({ ...prevStation, hasDiseble: true }));\n    } else {\n      this.setState((prevState) => ({ ...prevState, hasDiseble: false }));\n    }\n  }\n\n  async onClickButton() {\n    const { nameArtist } = this.state;\n    this.setState((prevState) => ({ ...prevState, nameArtist: '', hasLoading: false }));\n    const album = await searchAlbumsAPI(nameArtist);\n    this.setState((prevState) => ({ ...prevState, hasLoading: true }));\n    console.log(album);\n  }\n\n  render() {\n    const { hasDiseble, nameArtist, hasLoading } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n\n        <Header />\n        <h1>search</h1>\n        { hasLoading\n          ? <>\n            <label htmlFor=\"artistInput\">\n              <input\n                data-testid=\"search-artist-input\"\n                type=\"text\"\n                name=\"artistInput\"\n                value={ nameArtist }\n                onChange={ this.handleChageInput }\n              />\n            </label>\n            <button\n              data-testid=\"search-artist-button\"\n              type=\"button\"\n              disabled={ hasDiseble }\n              onClick={ this.onClickButton }\n            >\n              Pesquisar\n            </button>\n            </>\n          : <Loading />}\n      </div>);\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}