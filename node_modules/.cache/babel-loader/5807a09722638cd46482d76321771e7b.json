{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      albumId: '',\n      isLoading: true,\n      listMusica: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    this.setState({\n      albumId: id,\n      isLoading: true\n    });\n    const music = await getMusics(id);\n    this.setState({\n      albumId: id,\n      isLoading: false,\n      listMusica: music\n    });\n    console.log(music);\n  }\n\n  render() {\n    const {\n      albumId,\n      isLoading,\n      listMusica\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"artist-name\",\n          children: listMusica[0].artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"album-name\",\n          children: listMusica[0].collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \"listMusica.map((musica)=> console.log(musica));\"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Album;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js"],"names":["React","Header","getMusics","Loading","Album","Component","constructor","state","albumId","isLoading","listMusica","componentDidMount","match","params","id","props","setState","music","console","log","render","artistName","collectionName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAEM,EAAX;AAAeL,MAAAA,SAAS,EAAE;AAA1B,KAAd;AACA,UAAMQ,KAAK,GAAG,MAAMf,SAAS,CAACY,EAAD,CAA7B;AACA,SAAKE,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAEM,EAAX;AAAeL,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,UAAU,EAAEO;AAA7C,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAqC,KAAKH,KAAhD;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN;AAAA,gCACA;AAAI,yBAAY,aAAhB;AAAA,oBAA+BC,UAAU,CAAC,CAAD,CAAV,CAAcW;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAI,yBAAY,YAAhB;AAAA,oBAA8BX,UAAU,CAAC,CAAD,CAAV,CAAcY;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,sBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9BiC;;AAgCpC,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      albumId: '',\n      isLoading: true,\n      listMusica: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.setState({ albumId: id, isLoading: true });\n    const music = await getMusics(id);\n    this.setState({ albumId: id, isLoading: false, listMusica: music });\n    console.log(music);\n  }\n\n  render() {\n    const { albumId, isLoading, listMusica } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {isLoading ? <Loading />\n          : <>\n            <h2 data-testid=\"artist-name\">{listMusica[0].artistName}</h2>\n            <h3 data-testid=\"album-name\">{listMusica[0].collectionName}</h3>\n            listMusica.map((musica)=> console.log(musica));\n          </>}\n      </div>);\n  }\n}\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}