{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isFaforite: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      favorito\n    } = this.props;\n\n    if (favorito) {\n      this.setState({\n        isFaforite: true\n      });\n    }\n  }\n\n  onChangeInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      checked\n    } = target;\n    this.setState({\n      isFaforite: checked\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const {\n      isFaforite\n    } = this.state;\n    const {\n      id\n    } = this.props;\n\n    if (isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await addSong(id);\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      previewUrl,\n      trackName,\n      trackId\n    } = this.props;\n    const {\n      isLoading,\n      isFaforite\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkMusic\",\n          children: [\"Favorita:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checkMusic\",\n            \"data-testid\": `checkbox-music-${trackId}`,\n            checked: isFaforite,\n            onChange: this.onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bo.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","getFavoriteSongs","Loading","MusicCard","Component","constructor","state","isFaforite","onChangeInput","bind","addFavoritos","componentDidMount","favorito","props","setState","target","checked","id","isLoading","render","previewUrl","trackName","trackId","propTypes","string","isRequired","number","bo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,8BAA1C;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;;AACA,QAAID,QAAJ,EAAc;AACZ,WAAKE,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD;AACF;;AAEDC,EAAAA,aAAa,OAAa;AAAA,QAAZ;AAAEO,MAAAA;AAAF,KAAY;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAcD,MAApB;AACA,SAAKD,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAES;AADA,KAAd,EAEG,MAAM,KAAKN,YAAL,EAFT;AAGD;;AAEiB,QAAZA,YAAY,GAAG;AACnB,UAAM;AAAEH,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAS,KAAKJ,KAApB;;AAEA,QAAIN,UAAJ,EAAgB;AACd,WAAKO,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMlB,OAAO,CAACiB,EAAD,CAAb;AACA,WAAKH,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,QAAqC,KAAKT,KAAhD;AACA,UAAM;AAAEK,MAAAA,SAAF;AAAaX,MAAAA;AAAb,QAA4B,KAAKD,KAAvC;AACA,wBACE;AAAA,gBACIY,SAAS,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADM,gBAGP;AAAA,gCACE;AAAO,yBAAY,iBAAnB;AAAqC,UAAA,GAAG,EAAGE,UAA3C;AAAwD,UAAA,QAAQ,MAAhE;AAAA,kCACE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF,4DAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA,+CAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,YAFP;AAGE,2BAAe,kBAAiBC,OAAQ,EAH1C;AAIE,YAAA,OAAO,EAAGf,UAJZ;AAKE,YAAA,QAAQ,EAAG,KAAKC;AALlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAjEqC;;AAmExCL,SAAS,CAACoB,SAAV,GAAsB;AACpBH,EAAAA,UAAU,EAAErB,SAAS,CAACyB,MAAV,CAAiBC,UADT;AAEpBJ,EAAAA,SAAS,EAAEtB,SAAS,CAACyB,MAAV,CAAiBC,UAFR;AAGpBH,EAAAA,OAAO,EAAEvB,SAAS,CAAC2B,MAAV,CAAiBD,UAHN;AAIpBb,EAAAA,QAAQ,EAAEb,SAAS,CAAC4B,EAAV,CAAaF;AAJH,CAAtB;AAMA,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isFaforite: false,\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const { favorito } = this.props;\n    if (favorito) {\n      this.setState({\n        isFaforite: true,\n      });\n    }\n  }\n\n  onChangeInput({ target }) {\n    const { checked } = target;\n    this.setState({\n      isFaforite: checked,\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const { isFaforite } = this.state;\n    const { id } = this.props;\n\n    if (isFaforite) {\n      this.setState({ isLoading: true });\n      await addSong(id);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { previewUrl, trackName, trackId } = this.props;\n    const { isLoading, isFaforite } = this.state;\n    return (\n      <div>\n        { isLoading\n          ? (<Loading />)\n          : (\n            <>\n              <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n                <p>{trackName}</p>\n                <track kind=\"captions\" />\n                O seu navegador n√£o suporta o elemento\n                <code>audio</code>\n              </audio>\n              <label htmlFor=\"checkMusic\">\n                Favorita:\n                <input\n                  type=\"checkbox\"\n                  name=\"checkMusic\"\n                  data-testid={ `checkbox-music-${trackId}` }\n                  checked={ isFaforite }\n                  onChange={ this.onChangeInput }\n                />\n              </label>\n            </>)}\n      </div>\n    );\n  }\n}\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bo.isRequired,\n};\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}