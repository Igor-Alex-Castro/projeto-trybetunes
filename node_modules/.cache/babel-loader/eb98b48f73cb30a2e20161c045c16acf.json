{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      listCantor: [],\n      listMusic: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    this.setState({\n      isLoading: true\n    });\n    const music = await getMusics(id);\n    const musicList = music.filter(_ref => {\n      let {\n        kind\n      } = _ref;\n      return kind === 'song';\n    });\n    this.setState({\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList\n    });\n    console.log(music);\n  }\n\n  render() {\n    const {\n      isLoading,\n      listCantor,\n      listMusic\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this) : listMusic.map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n        trackName: music.trackName,\n        previewUrl: music.previewUrl\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","MusicCard","getMusics","Loading","Album","Component","constructor","state","isLoading","listCantor","listMusic","componentDidMount","match","props","params","id","setState","music","musicList","filter","kind","console","log","render","map","index","trackName","previewUrl","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASD,MAAf;AACA,SAAKE,QAAL,CAAc;AAAER,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMS,KAAK,GAAG,MAAMf,SAAS,CAACa,EAAD,CAA7B;AACA,UAAMG,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAcA,IAAI,KAAK,MAAvB;AAAA,KAAb,CAAlB;AACA,SAAKJ,QAAL,CAAc;AACZR,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,UAAU,EAAEQ,KAAK,CAAC,CAAD,CAFL;AAGZP,MAAAA,SAAS,EAAEQ;AAHC,KAAd;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA;AAAzB,QAAuC,KAAKH,KAAlD;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAGIC,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GACNE,SAAS,CAACc,GAAV,CAAc,CAACP,KAAD,EAAQQ,KAAR,kBACf,QAAC,SAAD;AACE,QAAA,SAAS,EAAGR,KAAK,CAACS,SADpB;AAGE,QAAA,UAAU,EAAGT,KAAK,CAACU;AAHrB,SAEQF,KAFR;AAAA;AAAA;AAAA;AAAA,cADC,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAvCiC;;AAyCpCrB,KAAK,CAACwB,SAAN,GAAkB;AAChBhB,EAAAA,KAAK,EAAEb,SAAS,CAAC8B,KAAV,CAAgB;AACrBf,IAAAA,MAAM,EAAEf,SAAS,CAAC8B,KAAV,CAAgB;AACtBd,MAAAA,EAAE,EAAEhB,SAAS,CAAC+B,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALa,CAAlB;AAOA,eAAe3B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      listCantor: [],\n      listMusic: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    this.setState({ isLoading: true });\n    const music = await getMusics(id);\n    const musicList = music.filter(({ kind }) => kind === 'song');\n    this.setState({\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList });\n    console.log(music);\n  }\n\n  render() {\n    const { isLoading, listCantor, listMusic } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n\n        { isLoading ? <Loading />\n          : (listMusic.map((music, index) => (\n            <MusicCard\n              trackName={ music.trackName }\n              key={ index }\n              previewUrl={ music.previewUrl }\n            />\n          )))}\n      </div>);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}