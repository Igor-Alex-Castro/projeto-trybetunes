{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/loading/Loading';\nimport './musicaCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFaforite: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      favorito\n    } = this.props;\n\n    if (favorito) {\n      this.setState({\n        isFaforite: true\n      });\n    }\n  }\n\n  onChangeInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      checked\n    } = target;\n    this.setState({\n      isFaforite: checked\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const {\n      isFaforite\n    } = this.state;\n    const {\n      id,\n      atualizaSong,\n      isAlbum\n    } = this.props;\n\n    if (isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await addSong(id);\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    if (!isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await removeSong(id);\n      this.setState({\n        isLoading: false\n      });\n\n      if (!isAlbum) {\n        await atualizaSong();\n      }\n    }\n  }\n\n  render() {\n    const {\n      previewUrl,\n      trackName,\n      trackId\n    } = this.props;\n    const {\n      isLoading,\n      isFaforite\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          preload: \"auto\",\n          id: \"podcast-audio\",\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackId,\n          children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: trackId,\n            \"data-testid\": `checkbox-music-${trackId}`,\n            checked: isFaforite,\n            atualizaSong: this.atualizaSong,\n            onChange: this.onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ctrl\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"podcast-play\",\n          onClick: this.playShow,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ion-ios-play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \"Play\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"podcast-pause\",\n          onClick: this.pauseShow,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ion-ios-pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), \"Pause\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Click me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bool.isRequired,\n  id: PropTypes.shape().isRequired,\n  atualizaSong: PropTypes.func.isRequired,\n  isAlbum: PropTypes.bool.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","removeSong","Loading","MusicCard","Component","constructor","props","state","isFaforite","onChangeInput","bind","addFavoritos","componentDidMount","favorito","setState","target","checked","id","atualizaSong","isAlbum","isLoading","render","previewUrl","trackName","trackId","playShow","pauseShow","propTypes","string","isRequired","number","bool","shape","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/loading/Loading';\nimport './musicaCard.css';\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFaforite: false,\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const { favorito } = this.props;\n    if (favorito) {\n      this.setState({\n        isFaforite: true,\n      });\n    }\n  }\n\n  onChangeInput({ target }) {\n    const { checked } = target;\n    this.setState({\n      isFaforite: checked,\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos() {\n    const { isFaforite } = this.state;\n    const { id, atualizaSong, isAlbum } = this.props;\n\n    if (isFaforite) {\n      this.setState({ isLoading: true });\n      await addSong(id);\n      this.setState({ isLoading: false });\n    }\n    if (!isFaforite) {\n      this.setState({ isLoading: true });\n      await removeSong(id);\n      this.setState({ isLoading: false });\n      if (!isAlbum) {\n        await atualizaSong();\n      }\n    }\n  }\n\n  render() {\n    const { previewUrl, trackName, trackId } = this.props;\n    const { isLoading, isFaforite } = this.state;\n    return (\n      <div>\n        { isLoading\n          ? (<Loading />)\n          : (\n\n            <div>\n              <p>{trackName}</p>\n\n              <audio\n                data-testid=\"audio-component\"\n                src={ previewUrl }\n                preload=\"auto\"\n                id=\"podcast-audio\"\n                controls\n              >\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                <code>audio</code>\n              </audio>\n              <label htmlFor={ trackId }>\n                Favorita\n                <input\n                  type=\"checkbox\"\n                  id={ trackId }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  checked={ isFaforite }\n                  atualizaSong={ this.atualizaSong }\n                  onChange={ this.onChangeInput }\n                />\n              </label>\n\n            </div>\n          )}\n\n        <div className=\"player-ctrl\">\n\n          <a id=\"podcast-play\" onClick={ this.playShow }>\n            <i className=\"ion-ios-play\" />\n            Play\n          </a>\n\n          <a id=\"podcast-pause\" onClick={ this.pauseShow }>\n            <i className=\"ion-ios-pause\" />\n            Pause\n          </a>\n          <h1>Click me</h1>\n        </div>\n      </div>\n\n    );\n  }\n}\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bool.isRequired,\n  id: PropTypes.shape().isRequired,\n  atualizaSong: PropTypes.func.isRequired,\n  isAlbum: PropTypes.bool.isRequired,\n};\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}