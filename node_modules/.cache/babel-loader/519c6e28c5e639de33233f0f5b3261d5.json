{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/loading/Loading';\nimport './musicaCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFaforite: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      favorito\n    } = this.props;\n\n    if (favorito) {\n      this.setState({\n        isFaforite: true\n      });\n    }\n  }\n\n  onChangeInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      checked\n    } = target;\n    console.log(target.parentNode.parentNode.style.display = 'block');\n    this.setState({\n      isFaforite: checked\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos(event) {\n    const {\n      isFaforite\n    } = this.state;\n    const {\n      id,\n      atualizaSong,\n      isAlbum\n    } = this.props;\n    console.log(event);\n\n    if (isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await addSong(id);\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    if (!isFaforite) {\n      this.setState({\n        isLoading: true\n      });\n      await removeSong(id);\n      this.setState({\n        isLoading: false\n      });\n\n      if (!isAlbum) {\n        await atualizaSong();\n      }\n    }\n  }\n\n  render() {\n    const {\n      previewUrl,\n      trackName,\n      trackId\n    } = this.props;\n    const {\n      isLoading,\n      isFaforite\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicas\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicasAdio\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"track-name\",\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          preload: \"auto\",\n          id: \"plyaer\",\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackId,\n          className: \"label-check-box\",\n          children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: trackId,\n            \"data-testid\": `checkbox-music-${trackId}`,\n            className: \"check-box\",\n            checked: isFaforite,\n            atualizaSong: this.atualizaSong,\n            onChange: this.onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bool.isRequired,\n  id: PropTypes.shape().isRequired,\n  atualizaSong: PropTypes.func.isRequired,\n  isAlbum: PropTypes.bool.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","removeSong","Loading","MusicCard","Component","constructor","props","state","isFaforite","onChangeInput","bind","addFavoritos","componentDidMount","favorito","setState","target","checked","console","log","parentNode","style","display","event","id","atualizaSong","isAlbum","isLoading","render","previewUrl","trackName","trackId","propTypes","string","isRequired","number","bool","shape","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/loading/Loading';\nimport './musicaCard.css';\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFaforite: false,\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.addFavoritos = this.addFavoritos.bind(this);\n  }\n\n  componentDidMount() {\n    const { favorito } = this.props;\n    if (favorito) {\n      this.setState({\n        isFaforite: true,\n      });\n    }\n  }\n\n  onChangeInput({ target }) {\n    const { checked } = target;\n    console.log(target.parentNode.parentNode.style.display = 'block');\n    this.setState({\n      isFaforite: checked,\n    }, () => this.addFavoritos());\n  }\n\n  async addFavoritos(event) {\n    const { isFaforite } = this.state;\n    const { id, atualizaSong, isAlbum } = this.props;\n    console.log(event);\n    if (isFaforite) {\n      this.setState({ isLoading: true });\n      await addSong(id);\n      this.setState({ isLoading: false });\n    }\n    if (!isFaforite) {\n      this.setState({ isLoading: true });\n      await removeSong(id);\n      this.setState({ isLoading: false });\n      if (!isAlbum) {\n        await atualizaSong();\n      }\n    }\n  }\n\n  render() {\n    const { previewUrl, trackName, trackId } = this.props;\n    const { isLoading, isFaforite } = this.state;\n    return (\n      <div className=\"musicas\">\n        { isLoading\n          ? (<Loading />)\n          : (\n\n            <div className=\"musicasAdio\">\n              <p className=\"track-name\">{trackName}</p>\n\n              <audio\n                data-testid=\"audio-component\"\n                src={ previewUrl }\n                preload=\"auto\"\n                id=\"plyaer\"\n                controls\n              >\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                <code>audio</code>\n              </audio>\n              <label htmlFor={ trackId } className=\"label-check-box\">\n                Favorita\n                <input\n                  type=\"checkbox\"\n                  id={ trackId }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  className=\"check-box\"\n                  checked={ isFaforite }\n                  atualizaSong={ this.atualizaSong }\n                  onChange={ this.onChangeInput }\n                />\n              </label>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  favorito: PropTypes.bool.isRequired,\n  id: PropTypes.shape().isRequired,\n  atualizaSong: PropTypes.func.isRequired,\n  isAlbum: PropTypes.bool.isRequired,\n};\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}