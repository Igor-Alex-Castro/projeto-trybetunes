{"ast":null,"code":"var _jsxFileName = \"/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      listCantor: [],\n      listMusic: [],\n      musicaFav: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    this.setState({\n      isLoading: true\n    });\n    const music = await getMusics(id);\n    const musicList = music.filter(_ref => {\n      let {\n        kind\n      } = _ref;\n      return kind === 'song';\n    });\n    let musicFav = await atualizaSong();\n\n    if (musicFav.length <= 0) {\n      musicFav = [];\n    }\n\n    console.log(musicFav);\n    this.setState({\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList,\n      musicaFav: musicFav\n    });\n  }\n\n  async atualizaSong() {\n    this.setState({\n      isLoading: true\n    });\n    const musicFav = await getFavoriteSongs();\n    this.setState({\n      isLoading: false\n    });\n    return musicFav;\n  }\n\n  render() {\n    const {\n      isLoading,\n      listCantor,\n      listMusic,\n      musicaFav\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"artist-name\",\n        children: listCantor.artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"album-name\",\n        children: listCantor.collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this) : listMusic.map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n        trackName: music.trackName,\n        previewUrl: music.previewUrl,\n        trackId: music.trackId,\n        id: music,\n        favorito: musicaFav.some(m => m.trackId === music.trackId),\n        isAlbum: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/igor/projetos-trybe/sd-020-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","MusicCard","getMusics","Loading","getFavoriteSongs","Album","Component","constructor","state","isLoading","listCantor","listMusic","musicaFav","componentDidMount","match","props","params","id","setState","music","musicList","filter","kind","musicFav","atualizaSong","length","console","log","render","artistName","collectionName","map","index","trackName","previewUrl","trackId","some","m","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      listCantor: [],\n      listMusic: [],\n      musicaFav: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n\n    this.setState({ isLoading: true });\n    const music = await getMusics(id);\n    const musicList = music.filter(({ kind }) => kind === 'song');\n    let musicFav = await atualizaSong();\n    if (musicFav.length <= 0) {\n      musicFav = [];\n    }\n    console.log(musicFav);\n    this.setState({\n      isLoading: false,\n      listCantor: music[0],\n      listMusic: musicList,\n      musicaFav: musicFav });\n  }\n\n  async atualizaSong() {\n    this.setState({ isLoading: true });\n    const musicFav = await getFavoriteSongs();\n    this.setState({ isLoading: false });\n    return musicFav;\n  }\n\n  render() {\n    const { isLoading, listCantor, listMusic, musicaFav } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <h2 data-testid=\"artist-name\">{listCantor.artistName}</h2>\n        <h3 data-testid=\"album-name\">{listCantor.collectionName}</h3>\n        { isLoading ? <Loading />\n          : (listMusic.map((music, index) => (\n            <MusicCard\n              trackName={ music.trackName }\n              key={ index }\n              previewUrl={ music.previewUrl }\n              trackId={ music.trackId }\n              id={ music }\n              favorito={ musicaFav.some((m) => m.trackId === music.trackId) }\n              isAlbum\n            />\n          )))}\n      </div>);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}